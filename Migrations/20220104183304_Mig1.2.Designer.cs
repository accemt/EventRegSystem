// <auto-generated />
using System;
using EventRegSystem.Models.Domain;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace EventRegSystem.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220104183304_Mig1.2")]
    partial class Mig12
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("EventRegSystem.Models.Domain.Client", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("RegDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Role")
                        .HasColumnType("text");

                    b.Property<string>("email")
                        .HasColumnType("text");

                    b.Property<string>("phone")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("EventRegSystem.Models.Domain.TimeTable", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("EventDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long?>("HeadClientId")
                        .HasColumnType("bigint");

                    b.Property<int>("MembersCount")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("HeadClientId");

                    b.ToTable("TimeTable");
                });

            modelBuilder.Entity("EventRegSystem.Models.Domain.TimeTableClient", b =>
                {
                    b.Property<long>("ClientId")
                        .HasColumnType("bigint");

                    b.Property<long>("TimeTableId")
                        .HasColumnType("bigint");

                    b.Property<string>("Comment")
                        .HasColumnType("text");

                    b.HasKey("ClientId", "TimeTableId");

                    b.HasIndex("TimeTableId");

                    b.ToTable("TimeTableClients");
                });

            modelBuilder.Entity("EventRegSystem.Models.Domain.TimeTable", b =>
                {
                    b.HasOne("EventRegSystem.Models.Domain.Client", "HeadClient")
                        .WithMany()
                        .HasForeignKey("HeadClientId");

                    b.Navigation("HeadClient");
                });

            modelBuilder.Entity("EventRegSystem.Models.Domain.TimeTableClient", b =>
                {
                    b.HasOne("EventRegSystem.Models.Domain.Client", "Client")
                        .WithMany("TimeTableClients")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EventRegSystem.Models.Domain.TimeTable", "TimeTableSpec")
                        .WithMany("TimeTableClients")
                        .HasForeignKey("TimeTableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("TimeTableSpec");
                });

            modelBuilder.Entity("EventRegSystem.Models.Domain.Client", b =>
                {
                    b.Navigation("TimeTableClients");
                });

            modelBuilder.Entity("EventRegSystem.Models.Domain.TimeTable", b =>
                {
                    b.Navigation("TimeTableClients");
                });
#pragma warning restore 612, 618
        }
    }
}
